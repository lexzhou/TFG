scale_colour_manual("", labels = c("AVOIDANT", "INCORRECT", "CORRECT"),
values = c("#a8dadc", "#e63946", "#1d3557")) +
# scale_y_continuous(labels = scales::percent) +
labs(title = stringr::str_split(files[i],"_")[[1]][1]) +
theme_minimal() +
theme(strip.text = element_text(face = "bold")) +
theme(
plot.title = element_text(color = "black", size = 10, face = "bold"),
plot.subtitle = element_text(color = "black", size = 6))  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# theme(legend.position = c(0.05,0.8))  +
# theme(legend.text = element_text(size = 6))
if(i==1){
listPlots[[i]] <- listPlots[[i]]  +
theme(
legend.position = c(0.005,1.1),
legend.justification = c("left", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.text = element_text(size = 6),
legend.key = element_rect(fill = "white")
)
}else{
listPlots[[i]] <- listPlots[[i]]  +
theme(
legend.position = "none")
}
listPlots[[i]] <- listPlots[[i]]  + xlab(diffs[i]) + ylab("")
}
return(listPlots)
}
openPDFEPS(paste0("locality_diff_comparison"),width=14,height=10.66)
do.call("grid.arrange", c(plotPerformance_locality(), ncol=1))
dev.off()
plotPerformance_locality <- function(files = c("locality_results_bins_city_prob_inv.csv",
"locality_results_bins_target_city_prob_inv.csv",
"locality_results_bins_city_frequency.csv"),
diffs = c(latex2exp::TeX(r"($f_{inp}$)"),
latex2exp::TeX(r"($f_{tar}$)"),
latex2exp::TeX(r"($f_{pop}$)"))
){
listPlots <- list()
for(i in 1:length(files)){
print(paste("------------", i))
data <- read.csv(files[i])
data[data$outcome=="AVOIDANCE", "outcome"] = "AVOIDANT"
data.summ <- data %>% group_by(engine, template_id, difficulty_bin, outcome) %>% summarise(n = n()) %>%
mutate(freqOutcome = n / sum(n))
ggplot(data = filter(data.summ, engine == "gpt-3.5-turbo"), aes(difficulty_bin, freqOutcome, fill = outcome)) + geom_col()
data.summ$engine <- factor(data.summ$engine,
levels = c("GPT-3 Ada","GPT-3 Babbage","GPT-3 Curie","GPT-3 Davinci","text-davinci-001",
"text-davinci-002","text-davinci-003","GPT-3.5-turbo", "GPT-4"))
data.summ$outcome <- factor(data.summ$outcome,
levels = c("AVOIDANT", "INCORRECT", "CORRECT"))
# Calculate Spearman correlation for each engine
corr_data <- data.summ[data.summ$outcome == "CORRECT", ]
spearman_corr <- corr_data %>% group_by(engine) %>%
summarise(spearman_corr = cor(difficulty_bin, freqOutcome, method = "spearman")) %>%
mutate(spearman_corr = round(spearman_corr, 2))
# Combine engine names with Spearman correlation values
spearman_corr$engine_label <- paste(spearman_corr$engine, "(", spearman_corr$spearman_corr, ")")
listPlots[[i]] <- ggplot(data.summ, aes(difficulty_bin, freqOutcome, colour = outcome, fill = outcome)) +
# geom_col(width=1.5) +
geom_col(position = "fill") +
facet_wrap(~engine, nrow = 1, labeller = labeller(engine = setNames(as.character(spearman_corr$engine_label),
as.character(spearman_corr$engine))))
scale_fill_manual("", labels = c("AVOIDANT", "INCORRECT", "CORRECT"),
values = c("#a8dadc", "#e63946", "#1d3557")) +
scale_colour_manual("", labels = c("AVOIDANT", "INCORRECT", "CORRECT"),
values = c("#a8dadc", "#e63946", "#1d3557")) +
# scale_y_continuous(labels = scales::percent) +
labs(title = stringr::str_split(files[i],"_")[[1]][1]) +
theme_minimal() +
theme(strip.text = element_text(face = "bold")) +
theme(
plot.title = element_text(color = "black", size = 10, face = "bold"),
plot.subtitle = element_text(color = "black", size = 6))  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# theme(legend.position = c(0.05,0.8))  +
# theme(legend.text = element_text(size = 6))
if(i==1){
listPlots[[i]] <- listPlots[[i]]  +
theme(
legend.position = c(0.005,1.1),
legend.justification = c("left", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.text = element_text(size = 6),
legend.key = element_rect(fill = "white")
)
}else{
listPlots[[i]] <- listPlots[[i]]  +
theme(
legend.position = "none")
}
listPlots[[i]] <- listPlots[[i]]  + xlab(diffs[i]) + ylab("")
}
return(listPlots)
}
openPDFEPS(paste0("locality_diff_comparison"),width=14,height=10.66)
do.call("grid.arrange", c(plotPerformance_locality(), ncol=1))
dev.off()
rlang::last_error()
plotPerformance_locality <- function(files = c("locality_results_bins_city_prob_inv.csv",
"locality_results_bins_target_city_prob_inv.csv",
"locality_results_bins_multiplication_city_prob_inv.csv",
"locality_results_bins_city_frequency.csv"),
diffs = c(latex2exp::TeX(r"($f_{inp}$)"),
latex2exp::TeX(r"($f_{tar}$)"),
latex2exp::TeX(r"($f_{mul}$)"),
latex2exp::TeX(r"($f_{pop}$)"))
){
listPlots <- list()
for(i in 1:length(files)){
print(paste("------------", i))
data <- read.csv(files[i])
data[data$outcome=="AVOIDANCE", "outcome"] = "AVOIDANT"
data.summ <- data %>% group_by(engine, template_id, difficulty_bin, outcome) %>% summarise(n = n()) %>%
mutate(freqOutcome = n / sum(n))
ggplot(data = filter(data.summ, engine == "gpt-3.5-turbo"), aes(difficulty_bin, freqOutcome, fill = outcome)) + geom_col()
data.summ$engine <- factor(data.summ$engine,
levels = c("GPT-3 Ada","GPT-3 Babbage","GPT-3 Curie","GPT-3 Davinci","text-davinci-001",
"text-davinci-002","text-davinci-003","GPT-3.5-turbo", "GPT-4"))
data.summ$outcome <- factor(data.summ$outcome,
levels = c("AVOIDANT", "INCORRECT", "CORRECT"))
listPlots[[i]] <- ggplot(data.summ, aes(difficulty_bin, freqOutcome, colour = outcome, fill = outcome)) +
# geom_col(width=1.5) +
geom_col(position = "fill") +
facet_wrap(~engine, nrow = 1) +
scale_fill_manual("", labels = c("AVOIDANT", "INCORRECT", "CORRECT"),
values = c("#a8dadc", "#e63946", "#1d3557")) +
scale_colour_manual("", labels = c("AVOIDANT", "INCORRECT", "CORRECT"),
values = c("#a8dadc", "#e63946", "#1d3557")) +
# scale_y_continuous(labels = scales::percent) +
labs(title = stringr::str_split(files[i],"_")[[1]][1]) +
theme_minimal() +
theme(strip.text = element_text(face = "bold")) +
theme(
plot.title = element_text(color = "black", size = 10, face = "bold"),
plot.subtitle = element_text(color = "black", size = 6))  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# theme(legend.position = c(0.05,0.8))  +
# theme(legend.text = element_text(size = 6))
if(i==1){
listPlots[[i]] <- listPlots[[i]]  +
theme(
legend.position = c(0.005,1.1),
legend.justification = c("left", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.text = element_text(size = 6),
legend.key = element_rect(fill = "white")
)
}else{
listPlots[[i]] <- listPlots[[i]]  +
theme(
legend.position = "none")
}
listPlots[[i]] <- listPlots[[i]]  + xlab(diffs[i]) + ylab("")
}
return(listPlots)
}
openPDFEPS(paste0("locality_diff_comparison"),width=14,height=10.66)
do.call("grid.arrange", c(plotPerformance_locality(), ncol=1))
dev.off()
openPDFEPS(paste0("locality_diff_comparison"),width=14,height=10.66)
do.call("grid.arrange", c(plotPerformance_locality(), ncol=1))
dev.off()
plotPerformance_locality <- function(files = c("locality_results_bins_city_prob_inv.csv",
"locality_results_bins_target_city_prob_inv.csv",
"locality_results_bins_multiplication_city_prob_inv.csv",
"locality_results_bins_city_frequency.csv"),
diffs = c(latex2exp::TeX(r"($f_{inp}$)"),
latex2exp::TeX(r"($f_{tar}$)"),
latex2exp::TeX(r"($f_{mul}$)"),
latex2exp::TeX(r"($f_{pop}$)"))
){
listPlots <- list()
for(i in 1:length(files)){
print(paste("------------", i))
data <- read.csv(files[i])
data[data$outcome=="AVOIDANCE", "outcome"] = "AVOIDANT"
data.summ <- data %>% group_by(engine, template_id, difficulty_bin, outcome) %>% summarise(n = n()) %>%
mutate(freqOutcome = n / sum(n))
ggplot(data = filter(data.summ, engine == "gpt-3.5-turbo"), aes(difficulty_bin, freqOutcome, fill = outcome)) + geom_col()
data.summ$engine <- factor(data.summ$engine,
levels = c("GPT-3 Ada","GPT-3 Babbage","GPT-3 Curie","GPT-3 Davinci","text-davinci-001",
"text-davinci-002","text-davinci-003","GPT-3.5-turbo", "GPT-4"))
data.summ$outcome <- factor(data.summ$outcome,
levels = c("AVOIDANT", "INCORRECT", "CORRECT"))
# Calculate Spearman correlation for each engine
corr_data <- data.summ[data.summ$outcome == "CORRECT", ]
spearman_corr <- corr_data %>% group_by(engine) %>%
summarise(spearman_corr = cor(difficulty_bin, freqOutcome, method = "spearman")) %>%
mutate(spearman_corr = round(spearman_corr, 2))
# Combine engine name and Spearman correlation
spearman_corr$engine_label <- paste(spearman_corr$engine, "(", spearman_corr$spearman_corr, ")")
listPlots[[i]] <- ggplot(data.summ, aes(difficulty_bin, freqOutcome, colour = outcome, fill = outcome)) +
geom_col(position = "fill") +
facet_wrap(~engine, nrow = 1, labeller = labeller(engine = setNames(as.character(spearman_corr$engine_label), as.character(spearman_corr$engine)))) +
scale_fill_manual("", labels = c("AVOIDANT", "INCORRECT", "CORRECT"),
values = c("#a8dadc", "#e63946", "#1d3557")) +
scale_colour_manual("", labels = c("AVOIDANT", "INCORRECT", "CORRECT"),
values = c("#a8dadc", "#e63946", "#1d3557")) +
labs(title = stringr::str_split(files[i],"_")[[1]][1]) +
theme_minimal() +
theme(strip.text = element_text(face = "bold")) +
theme(
plot.title = element_text(color = "black", size = 10, face = "bold"),
plot.subtitle = element_text(color = "black", size = 6))  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
if(i==1){
listPlots[[i]] <- listPlots[[i]]  +
theme(
legend.position = c(0.005,1.1),
legend.justification = c("left", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.text = element_text(size = 6),
legend.key = element_rect(fill = "white")
)
}else{
listPlots[[i]] <- listPlots[[i]]  +
theme(
legend.position = "none")
}
listPlots[[i]] <- listPlots[[i]]  + xlab(diffs[i]) + ylab("")
}
return(listPlots)
}
openPDFEPS(paste0("locality_diff_comparison"),width=14,height=10.66)
do.call("grid.arrange", c(plotPerformance_locality(), ncol=1))
dev.off()
### Including Spearman correlation
plotPerformance_locality_table <- function(files = c("locality_results_bins_city_prob_inv.csv",
"locality_results_bins_target_city_prob_inv.csv",
"locality_results_bins_multiplication_city_prob_inv.csv",
"locality_results_bins_city_frequency.csv"),
diffs = c(latex2exp::TeX(r"($f_{inp}$)"),
latex2exp::TeX(r"($f_{tar}$)"),
latex2exp::TeX(r"($f_{mul}$)"),
latex2exp::TeX(r"($f_{pop}$)"))
){
spearman_corr_list <- list()
for(i in 1:length(files)){
print(paste("------------", i))
data <- read.csv(files[i])
data[data$outcome=="AVOIDANCE", "outcome"] = "AVOIDANT"
data.summ <- data %>% group_by(engine, template_id, difficulty_bin, outcome) %>% summarise(n = n()) %>%
mutate(freqOutcome = n / sum(n))
data.summ$engine <- factor(data.summ$engine,
levels = c("GPT-3 Ada","GPT-3 Babbage","GPT-3 Curie","GPT-3 Davinci","text-davinci-001",
"text-davinci-002","text-davinci-003","GPT-3.5-turbo", "GPT-4"))
data.summ$outcome <- factor(data.summ$outcome,
levels = c("AVOIDANT", "INCORRECT", "CORRECT"))
# Calculate Spearman correlation for each engine
corr_data <- data.summ[data.summ$outcome == "CORRECT", ]
spearman_corr <- corr_data %>% group_by(engine) %>%
summarise(spearman_corr = cor(difficulty_bin, freqOutcome, method = "spearman")) %>%
mutate(spearman_corr = round(spearman_corr, 2))
# Add file identifier to the table
spearman_corr$file <- stringr::str_split(files[i],"_")[[1]][1]
spearman_corr_list[[i]] <- spearman_corr
}
# Combine all Spearman correlation tables
spearman_corr_table <- do.call(rbind, spearman_corr_list)
return(spearman_corr_table)
}
spearman_corr_table <- plotPerformance_locality_table()
print(spearman_corr_table)
spearman_corr_table
fix(spearman_corr_table)
### Including Spearman correlation
plotPerformance_locality_table <- function(files = c("locality_results_bins_city_prob_inv.csv",
"locality_results_bins_target_city_prob_inv.csv",
"locality_results_bins_city_frequency.csv"),
diffs = c(latex2exp::TeX(r"($f_{inp}$)"),
latex2exp::TeX(r"($f_{tar}$)"),
latex2exp::TeX(r"($f_{pop}$)"))
){
spearman_corr_list <- list()
for(i in 1:length(files)){
print(paste("------------", i))
data <- read.csv(files[i])
data[data$outcome=="AVOIDANCE", "outcome"] = "AVOIDANT"
data.summ <- data %>% group_by(engine, template_id, difficulty_bin, outcome) %>% summarise(n = n()) %>%
mutate(freqOutcome = n / sum(n))
data.summ$engine <- factor(data.summ$engine,
levels = c("GPT-3 Ada","GPT-3 Babbage","GPT-3 Curie","GPT-3 Davinci","text-davinci-001",
"text-davinci-002","text-davinci-003","GPT-3.5-turbo", "GPT-4"))
data.summ$outcome <- factor(data.summ$outcome,
levels = c("AVOIDANT", "INCORRECT", "CORRECT"))
# Calculate Spearman correlation for each engine
corr_data <- data.summ[data.summ$outcome == "CORRECT", ]
spearman_corr <- corr_data %>% group_by(engine) %>%
summarise(spearman_corr = cor(difficulty_bin, freqOutcome, method = "spearman")) %>%
mutate(spearman_corr = round(spearman_corr, 2))
# Add file identifier to the table
spearman_corr$file <- stringr::str_split(files[i],"_")[[1]][1]
spearman_corr_list[[i]] <- spearman_corr
}
# Combine all Spearman correlation tables
spearman_corr_table <- do.call(rbind, spearman_corr_list)
return(spearman_corr_table)
}
### Including Spearman correlation
plotPerformance_addition_table <- function(files = c("addition_results_v3_bins_diff1.csv", "addition_results_v3_bins_diff2.csv",
"addition_results_v3_bins_diff3.csv", "addition_results_v3_bins_diffc.csv",
"addition_results_v3_bins_diff1c.csv", "addition_results_v3_bins_diff2c.csv",
"addition_results_v3_bins_diff3c.csv"),
diffs = c(latex2exp::TeX(r"($f_{min}$)"), latex2exp::TeX(r"($f_{hrm}$)"),
latex2exp::TeX(r"($f_{art}$)"), latex2exp::TeX(r"($f_{cry}$)"),
latex2exp::TeX(r"($f_{min} \oplus f_{cry}$)"), latex2exp::TeX(r"($f_{hrm} \oplus f_{cry}$)"),
latex2exp::TeX(r"($f_{art} \oplus f_{cry}$)"))
){
spearman_corr_list <- list()
for(i in 1:length(files)){
print(paste("------------", i))
data <- read.csv(files[i])
data[data$outcome=="AVOIDANCE", "outcome"] = "AVOIDANT"
data.summ <- data %>% group_by(engine, template_id, difficulty_bin, outcome) %>% summarise(n = n()) %>%
mutate(freqOutcome = n / sum(n))
data.summ$engine <- factor(data.summ$engine,
levels = c("GPT-3 Ada","GPT-3 Babbage","GPT-3 Curie","GPT-3 Davinci","text-davinci-001",
"text-davinci-002","text-davinci-003","GPT-3.5-turbo", "GPT-4"))
data.summ$outcome <- factor(data.summ$outcome,
levels = c("AVOIDANT", "INCORRECT", "CORRECT"))
# Calculate Spearman correlation for each engine
corr_data <- data.summ[data.summ$outcome == "CORRECT", ]
spearman_corr <- corr_data %>% group_by(engine) %>%
summarise(spearman_corr = cor(difficulty_bin, freqOutcome, method = "spearman")) %>%
mutate(spearman_corr = round(spearman_corr, 2))
# Add file identifier to the table
spearman_corr$file <- stringr::str_split(files[i],"_")[[1]][1]
spearman_corr_list[[i]] <- spearman_corr
}
# Combine all Spearman correlation tables
spearman_corr_table <- do.call(rbind, spearman_corr_list)
return(spearman_corr_table)
}
### Including Spearman correlation
plotPerformance_anagram_table <- function(files = c("anagram_results_bins_scrabble.csv", "anagram_results_bins_prob_inv.csv"),
diffs = c(latex2exp::TeX(r"($f_{scb}$)"),
latex2exp::TeX(r"($f_{swf}$)"))
){
spearman_corr_list <- list()
for(i in 1:length(files)){
print(paste("------------", i))
data <- read.csv(files[i])
data[data$outcome=="AVOIDANCE", "outcome"] = "AVOIDANT"
data.summ <- data %>% group_by(engine, template_id, difficulty_bin, outcome) %>% summarise(n = n()) %>%
mutate(freqOutcome = n / sum(n))
data.summ$engine <- factor(data.summ$engine,
levels = c("GPT-3 Ada","GPT-3 Babbage","GPT-3 Curie","GPT-3 Davinci","text-davinci-001",
"text-davinci-002","text-davinci-003","GPT-3.5-turbo", "GPT-4"))
data.summ$outcome <- factor(data.summ$outcome,
levels = c("AVOIDANT", "INCORRECT", "CORRECT"))
# Calculate Spearman correlation for each engine
corr_data <- data.summ[data.summ$outcome == "CORRECT", ]
spearman_corr <- corr_data %>% group_by(engine) %>%
summarise(spearman_corr = cor(difficulty_bin, freqOutcome, method = "spearman")) %>%
mutate(spearman_corr = round(spearman_corr, 2))
# Add file identifier to the table
spearman_corr$file <- stringr::str_split(files[i],"_")[[1]][1]
spearman_corr_list[[i]] <- spearman_corr
}
# Combine all Spearman correlation tables
spearman_corr_table <- do.call(rbind, spearman_corr_list)
return(spearman_corr_table)
}
plotPerformance_locality_table <- function(files = c("locality_results_bins_city_prob_inv.csv",
"locality_results_bins_target_city_prob_inv.csv",
"locality_results_bins_city_frequency.csv"),
diffs = c(latex2exp::TeX(r"($f_{inp}$)"),
latex2exp::TeX(r"($f_{tar}$)"),
latex2exp::TeX(r"($f_{pop}$)"))
){
spearman_corr_list <- list()
for(i in 1:length(files)){
print(paste("------------", i))
data <- read.csv(files[i])
data[data$outcome=="AVOIDANCE", "outcome"] = "AVOIDANT"
data.summ <- data %>% group_by(engine, template_id, difficulty_bin, outcome) %>% summarise(n = n()) %>%
mutate(freqOutcome = n / sum(n))
data.summ$engine <- factor(data.summ$engine,
levels = c("GPT-3 Ada","GPT-3 Babbage","GPT-3 Curie","GPT-3 Davinci","text-davinci-001",
"text-davinci-002","text-davinci-003","GPT-3.5-turbo", "GPT-4"))
data.summ$outcome <- factor(data.summ$outcome,
levels = c("AVOIDANT", "INCORRECT", "CORRECT"))
# Calculate Spearman correlation for each engine
corr_data <- data.summ[data.summ$outcome == "CORRECT", ]
spearman_corr <- corr_data %>% group_by(engine) %>%
summarise(spearman_corr = cor(difficulty_bin, freqOutcome, method = "spearman")) %>%
mutate(spearman_corr = round(spearman_corr, 2))
# Add file identifier to the table
spearman_corr$file <- stringr::str_split(files[i],"_")[[1]][1]
spearman_corr_list[[i]] <- spearman_corr
}
# Combine all Spearman correlation tables
spearman_corr_table <- do.call(rbind, spearman_corr_list)
return(spearman_corr_table)
}
spearman_corr_table_add <- plotPerformance_addition_table()
print(spearman_corr_table_add)
spearman_corr_table_ang <- plotPerformance_anagram_table()
print(spearman_corr_table_ang)
spearman_corr_table_loc <- plotPerformance_locality_table()
print(spearman_corr_table_loc)
plotPerformance_locality <- function(files = c("locality_results_bins_city_prob_inv.csv",
"locality_results_bins_target_city_prob_inv.csv",
"locality_results_bins_city_frequency.csv"),
diffs = c(latex2exp::TeX(r"($f_{inp}$)"),
latex2exp::TeX(r"($f_{tar}$)"),
latex2exp::TeX(r"($f_{pop}$)"))
){
listPlots <- list()
for(i in 1:length(files)){
print(paste("------------", i))
data <- read.csv(files[i])
data[data$outcome=="AVOIDANCE", "outcome"] = "AVOIDANT"
data.summ <- data %>% group_by(engine, template_id, difficulty_bin, outcome) %>% summarise(n = n()) %>%
mutate(freqOutcome = n / sum(n))
ggplot(data = filter(data.summ, engine == "gpt-3.5-turbo"), aes(difficulty_bin, freqOutcome, fill = outcome)) + geom_col()
data.summ$engine <- factor(data.summ$engine,
levels = c("GPT-3 Ada","GPT-3 Babbage","GPT-3 Curie","GPT-3 Davinci","text-davinci-001",
"text-davinci-002","text-davinci-003","GPT-3.5-turbo", "GPT-4"))
data.summ$outcome <- factor(data.summ$outcome,
levels = c("AVOIDANT", "INCORRECT", "CORRECT"))
listPlots[[i]] <- ggplot(data.summ, aes(difficulty_bin, freqOutcome, colour = outcome, fill = outcome)) +
# geom_col(width=1.5) +
geom_col(position = "fill") +
facet_wrap(~engine, nrow = 1) +
scale_fill_manual("", labels = c("AVOIDANT", "INCORRECT", "CORRECT"),
values = c("#a8dadc", "#e63946", "#1d3557")) +
scale_colour_manual("", labels = c("AVOIDANT", "INCORRECT", "CORRECT"),
values = c("#a8dadc", "#e63946", "#1d3557")) +
# scale_y_continuous(labels = scales::percent) +
labs(title = stringr::str_split(files[i],"_")[[1]][1]) +
theme_minimal() +
theme(strip.text = element_text(face = "bold")) +
theme(
plot.title = element_text(color = "black", size = 10, face = "bold"),
plot.subtitle = element_text(color = "black", size = 6))  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
# theme(legend.position = c(0.05,0.8))  +
# theme(legend.text = element_text(size = 6))
if(i==1){
listPlots[[i]] <- listPlots[[i]]  +
theme(
legend.position = c(0.005,1.1),
legend.justification = c("left", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
legend.text = element_text(size = 6),
legend.key = element_rect(fill = "white")
)
}else{
listPlots[[i]] <- listPlots[[i]]  +
theme(
legend.position = "none")
}
listPlots[[i]] <- listPlots[[i]]  + xlab(diffs[i]) + ylab("")
}
return(listPlots)
}
openPDFEPS(paste0("addition_diffs_comparison"),width=14,height=18.66)
do.call("grid.arrange", c(plotPerformance_addition(), ncol=1))
dev.off()
openPDFEPS(paste0("anagram_diffs_comparison"),width=14,height=5.66)
do.call("grid.arrange", c(plotPerformance_anagram(), ncol=1))
dev.off()
openPDFEPS(paste0("locality_diff_comparison"),width=14,height=10.66)
do.call("grid.arrange", c(plotPerformance_locality(), ncol=1))
dev.off()
openPDFEPS(paste0("locality_diff_comparison"),width=14,height=8)
do.call("grid.arrange", c(plotPerformance_locality(), ncol=1))
dev.off()
fix(spearman_corr_table_loc)
spearman_corr_table_add
mean(spearman_corr_table_add[1:9])
mean(spearman_corr_table_add[1:9,])
(spearman_corr_table_add[1:9,]
)
mean(c(spearman_corr_table_add[4:9,]))
mean(c(spearman_corr_table_add[4:9,]))
mean(c(spearman_corr_table_add[5:9,]))
c(spearman_corr_table_add[5:9,])
c(spearman_corr_table_add$spearman_corr[1:9,])
spearman_corr_table_add$spearman_corr[1:9]
mean(spearman_corr_table_add$spearman_corr[1:9])
spearman_corr_table_add$spearman_corr
spearman_corr_table_add
spearman_corr_table_add$spearman_corr
mean(spearman_corr_table_add$spearman_corr[4:9])
mean(spearman_corr_table_add$spearman_corr[13:18])
mean(spearman_corr_table_add$spearman_corr[19:27])
mean(spearman_corr_table_add$spearman_corr[28:36])
mean(spearman_corr_table_add$spearman_corr[27:45])
mean(spearman_corr_table_add$spearman_corr[37:45])
mean(spearman_corr_table_add$spearman_corr[40:45])
mean(spearman_corr_table_add$spearman_corr[46:54])
mean(spearman_corr_table_add$spearman_corr[49:54])
mean(spearman_corr_table_add$spearman_corr[55:63])
spearman_corr_table_ang$spearman_corr
mean(spearman_corr_table_ang$spearman_corr[1:9])
mean(spearman_corr_table_ang$spearman_corr[10:18])
spearman_corr_table_loc
spearman_corr_table_loc$spearman_corr
spearman_corr_table_loc$spearman_corr[1:9]
mean(spearman_corr_table_loc$spearman_corr[1:9])
mean(spearman_corr_table_loc$spearman_corr[10:18])
mean(spearman_corr_table_loc$spearman_corr[19:27])
